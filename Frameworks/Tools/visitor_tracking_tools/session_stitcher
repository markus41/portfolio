import azure.functions as func
from azure.cosmos import CosmosClient
import redis, hashlib, json

client = CosmosClient(os.getenv("COSMOS_CONN"))
db = client.get_database_client("tracking")
container = db.get_container_client("vis_events")
cache = redis.Redis.from_url(os.getenv("REDIS_URL"))

def main(event: func.EventHubEvent):
    data = json.loads(event.get_body())
    vid = data.get("visitor_cookie") or _resolve_fp(data)
    # Write event
    container.create_item({**data, "visitor_id": vid})
    # Engagement logic omitted

    def _resolve_fp(d):
        fp = d["fp"]
        key = f"fp:{fp}"
        vid = cache.get(key)
        if vid: return vid.decode()
        new_vid = hashlib.sha256(fp.encode()).hexdigest()
        cache.set(key, new_vid, ex=30*24*3600)
        return new_vid