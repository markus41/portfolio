# Tools/payment_tools/paypal_tool.py

import paypalrestsdk
from ..Engines.constants import PAYPAL_CLIENT_ID, PAYPAL_CLIENT_SECRET
from ..Engines.logger import get_logger

logger = get_logger(__name__)

paypalrestsdk.configure({
    "mode": "sandbox",  # or "live"
    "client_id": PAYPAL_CLIENT_ID,
    "client_secret": PAYPAL_CLIENT_SECRET
})

class PayPalTool:
    """
    Create and manage PayPal payments.
    """

    def create_payment(self, intent: str, payer: dict, transactions: list, redirect_urls: dict) -> dict:
        payment = paypalrestsdk.Payment({
            "intent": intent,
            "payer": payer,
            "transactions": transactions,
            "redirect_urls": redirect_urls
        })
        logger.info(f"Creating PayPal payment: {payment}")
        success = payment.create()
        logger.info(f"PayPal payment create status: {success}")
        return payment.to_dict()

    def execute_payment(self, payment_id: str, payer_id: str) -> dict:
        payment = paypalrestsdk.Payment.find(payment_id)
        success = payment.execute({"payer_id": payer_id})
        logger.info(f"Executed PayPal payment {payment_id} success={success}")
        return payment.to_dict()

    def refund_sale(self, sale_id: str, amount: dict) -> dict:
        sale = paypalrestsdk.Sale.find(sale_id)
        refund = sale.refund({"amount": amount})
        logger.info(f"Refunding sale {sale_id}: {refund.success()}")
        return refund.to_dict()
