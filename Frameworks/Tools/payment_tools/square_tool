# Tools/payment_tools/square_tool.py

from square.client import Client
from ..Engines.constants import SQUARE_ACCESS_TOKEN, SQUARE_ENVIRONMENT
from ..Engines.logger import get_logger

logger = get_logger(__name__)

client = Client(
    access_token=SQUARE_ACCESS_TOKEN,
    environment=SQUARE_ENVIRONMENT  # "sandbox" or "production"
)

class SquareTool:
    """
    Create and manage Square payments.
    """

    def create_payment(self, source_id: str, amount_money: dict, idempotency_key: str, **kwargs) -> dict:
        body = {
            "source_id": source_id,
            "amount_money": amount_money,
            "idempotency_key": idempotency_key,
            **kwargs
        }
        logger.info(f"Square create_payment: {body}")
        resp = client.payments.create_payment(body)
        resp.raise_for_status()
        return resp.body

    def refund_payment(self, payment_id: str, amount_money: dict, idempotency_key: str) -> dict:
        body = {
            "payment_id": payment_id,
            "amount_money": amount_money,
            "idempotency_key": idempotency_key
        }
        logger.info(f"Square refund_payment: {body}")
        resp = client.refunds.refund_payment(body)
        resp.raise_for_status()
        return resp.body
