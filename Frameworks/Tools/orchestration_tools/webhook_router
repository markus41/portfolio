# Tools/orchestration_tools/webhook_router.py

from fastapi import APIRouter, Request, HTTPException
from ..Engines.logger import get_logger

logger = get_logger(__name__)
router = APIRouter()

@router.post("/webhook/{source}")
async def handle_webhook(source: str, request: Request):
    """
    Generic webhook endpoint. Routes raw JSON to the orchestrator queue.
    """
    payload = await request.json()
    logger.info(f"Received webhook from {source}: {payload}")
    # e.g. enqueue to Redis for processing
    from .queue_client import QueueClient
    qc = QueueClient()
    qc.enqueue(f"webhook:{source}", payload)
    return {"status": "accepted"}
