# Tools/data_ingestion_tools/kafka_ingestor.py

from kafka import KafkaConsumer
import json
from ..Engines.logger import get_logger
from ..Engines.constants import KAFKA_BOOTSTRAP_SERVERS

logger = get_logger(__name__)

class KafkaIngestor:
    def __init__(self, topic: str, group_id: str = None):
        logger.info(f"Connecting to Kafka brokers {KAFKA_BOOTSTRAP_SERVERS}")
        self.consumer = KafkaConsumer(
            topic,
            bootstrap_servers=KAFKA_BOOTSTRAP_SERVERS.split(','),
            group_id=group_id,
            value_deserializer=lambda m: json.loads(m.decode('utf-8'))
        )

    def consume(self, max_messages: int = None):
        """
        Yield messages from the topic as dicts.
        """
        count = 0
        for msg in self.consumer:
            logger.info(f"Received message at offset {msg.offset}")
            yield msg.value
            count += 1
            if max_messages and count >= max_messages:
                break
