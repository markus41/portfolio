# Tools/data_ingestion_tools/db_loader.py

from sqlalchemy import create_engine, text
import pandas as pd
from ..Engines.logger import get_logger
from ..Engines.constants import DB_CONNECTION_STRING

logger = get_logger(__name__)

class DatabaseLoader:
    def __init__(self):
        logger.info("Creating DB engine")
        self.engine = create_engine(DB_CONNECTION_STRING, future=True)

    def load(self, query: str, params: dict = None) -> pd.DataFrame:
        """
        Execute a SQL query and return the result as a DataFrame.
        """
        logger.info(f"Executing SQL query: {query} | params: {params}")
        with self.engine.connect() as conn:
            df = pd.read_sql(text(query), conn, params=params)
        logger.info(f"Query returned {len(df)} rows")
        return df
